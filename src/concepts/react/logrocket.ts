import { Concept } from "@/types/concept";

const concept: Concept = {
  title: {
    es: "LogRocket en React",
    en: "LogRocket in React"
  },
  slug: "logrocket",
  description: {
    es: "LogRocket es una herramienta de monitoreo y depuraci√≥n que permite grabar sesiones de usuario, capturar errores y analizar el comportamiento de las aplicaciones React en tiempo real. Proporciona informaci√≥n detallada sobre interacciones del usuario, estado de la aplicaci√≥n y problemas de rendimiento.",
    en: "LogRocket is a monitoring and debugging tool that allows recording user sessions, capturing errors, and analyzing the behavior of React applications in real-time. It provides detailed information about user interactions, application state, and performance issues."
  },
  sections: [
    {
      type: "text",
      title: {
        es: "üîπ¬øQu√© es LogRocket?",
        en: "üîπWhat is LogRocket?"
      },
      code: `LogRocket.init('your-app-id');`,
      content: {
        es: "LogRocket es una plataforma que combina la grabaci√≥n de sesiones de usuario con el monitoreo de errores y el an√°lisis de rendimiento. Permite a los desarrolladores reproducir exactamente lo que los usuarios hacen en la aplicaci√≥n, identificar problemas y solucionar errores de manera eficiente.",
        en: "LogRocket is a platform that combines user session recording with error monitoring and performance analysis. It allows developers to replay exactly what users do in the application, identify issues, and resolve errors efficiently."
      }
    },
    {
      type: "list",
      title: {
        es: "üîπ¬øCu√°ndo usar LogRocket?",
        en: "üîπWhen to use LogRocket?"
      },
      content: {
        es: [
          "Cuando necesitas grabar sesiones de usuario para entender c√≥mo interact√∫an con tu aplicaci√≥n.",
          "Cuando deseas capturar errores junto con el contexto del usuario y el estado de la aplicaci√≥n.",
          "Cuando trabajas en proyectos donde la depuraci√≥n y el an√°lisis de rendimiento son cr√≠ticos."
        ],
        en: [
          "When you need to record user sessions to understand how they interact with your application.",
          "When you want to capture errors along with user context and application state.",
          "When working on projects where debugging and performance analysis are critical."
        ]
      }
    },
    {
      type: "table",
      title: {
        es: "üîπComparaci√≥n entre LogRocket y Herramientas de Logging Tradicionales",
        en: "üîπComparison between LogRocket and Traditional Logging Tools"
      },
      headers: {
        es: ["Caracter√≠stica", "LogRocket", "Logging Tradicional"],
        en: ["Feature", "LogRocket", "Traditional Logging"]
      },
      rows: [
        {
          es: ["Grabaci√≥n de sesiones", "‚úÖ S√≠ (reproducci√≥n completa)", "‚ùå No (solo mensajes)"],
          en: ["Session recording", "‚úÖ Yes (full replay)", "‚ùå No (only messages)"]
        },
        {
          es: ["Contexto del usuario", "‚úÖ Completo (interacciones, estado)", "‚ùå Limitado (mensajes simples)"],
          en: ["User context", "‚úÖ Complete (interactions, state)", "‚ùå Limited (simple messages)"]
        },
        {
          es: ["An√°lisis de rendimiento", "‚úÖ Integrado", "‚ùå Requiere herramientas adicionales"],
          en: ["Performance analysis", "‚úÖ Integrated", "‚ùå Requires additional tools"]
        }
      ]
    },
    {
      type: "example",
      title: {
        es: "1Ô∏è‚É£ Ejemplo pr√°ctico de LogRocket",
        en: "1Ô∏è‚É£ Practical example of LogRocket"
      },
      caseTitle: {
        es: "Configuraci√≥n b√°sica en React",
        en: "Basic setup in React"
      },
      caseDescription: {
        es: "Este ejemplo muestra c√≥mo configurar LogRocket en una aplicaci√≥n React para grabar sesiones de usuario y capturar errores.",
        en: "This example demonstrates how to set up LogRocket in a React application to record user sessions and capture errors."
      },
      code: `// src/index.js
import React from 'react';
import ReactDOM from 'react-dom';
import LogRocket from 'logrocket';

LogRocket.init('your-app-id'); // Reemplaza con tu App ID

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);`,
      conclusion: {
        es: "üî• Beneficio: LogRocket graba autom√°ticamente las sesiones de usuario y captura errores, proporcionando contexto detallado para su resoluci√≥n.",
        en: "üî• Benefit: LogRocket automatically records user sessions and captures errors, providing detailed context for resolution."
      }
    },
    {
      type: "example",
      title: {
        es: "2Ô∏è‚É£ Ejemplo pr√°ctico de LogRocket",
        en: "2Ô∏è‚É£ Practical example of LogRocket"
      },
      caseTitle: {
        es: "Identificaci√≥n de problemas con grabaciones",
        en: "Problem identification with recordings"
      },
      caseDescription: {
        es: "Este ejemplo muestra c√≥mo usar las grabaciones de LogRocket para identificar problemas espec√≠ficos en la interacci√≥n del usuario.",
        en: "This example demonstrates how to use LogRocket recordings to identify specific issues in user interactions."
      },
      code: `// Simulaci√≥n de un error en un componente
function ErrorComponent() {
  const [error, setError] = React.useState(null);

  const handleClick = () => {
    try {
      throw new Error('Error simulado');
    } catch (err) {
      setError(err.message);
      LogRocket.captureException(err); // Captura el error en LogRocket
    }
  };

  return (
    <div>
      <button onClick={handleClick}>Simular Error</button>
      {error && <p>Error: {error}</p>}
    </div>
  );
}

export default ErrorComponent;`,
      conclusion: {
        es: "üî• Beneficio: Las grabaciones de LogRocket permiten reproducir exactamente lo que el usuario hizo antes de que ocurriera el error, facilitando la depuraci√≥n.",
        en: "üî• Benefit: LogRocket recordings allow you to replay exactly what the user did before the error occurred, making debugging easier."
      }
    },
    {
      type: "example",
      title: {
        es: "3Ô∏è‚É£ Ejemplo pr√°ctico de LogRocket",
        en: "3Ô∏è‚É£ Practical example of LogRocket"
      },
      caseTitle: {
        es: "Monitoreo de estado y rendimiento",
        en: "State and performance monitoring"
      },
      caseDescription: {
        es: "Este ejemplo muestra c√≥mo usar LogRocket para monitorear el estado de la aplicaci√≥n y analizar problemas de rendimiento.",
        en: "This example demonstrates how to use LogRocket to monitor the application state and analyze performance issues."
      },
      code: `// src/App.js
import React, { useState } from 'react';
import LogRocket from 'logrocket';

function App() {
  const [data, setData] = useState(null);

  const fetchData = () => {
    LogRocket.startTransaction('fetchData', 'API Call'); // Inicia una transacci√≥n
    fetch('https://api.example.com/data')
      .then((response) => response.json())
      .then((result) => {
        setData(result);
        LogRocket.endTransaction('fetchData'); // Finaliza la transacci√≥n
      })
      .catch((err) => {
        LogRocket.captureException(err); // Captura errores en la transacci√≥n
        LogRocket.endTransaction('fetchData');
      });
  };

  return (
    <div>
      <button onClick={fetchData}>Cargar Datos</button>
      {data ? <pre>{JSON.stringify(data, null, 2)}</pre> : <p>Cargando...</p>}
    </div>
  );
}

export default App;`,
      conclusion: {
        es: "üî• Beneficio: LogRocket no solo graba sesiones, sino que tambi√©n monitorea el estado de la aplicaci√≥n y analiza problemas de rendimiento como tiempos de carga de API.",
        en: "üî• Benefit: LogRocket not only records sessions but also monitors the application state and analyzes performance issues like API load times."
      }
    },
    {
      type: "list",
      title: {
        es: "üìå ¬øCu√°ndo NO usar LogRocket?",
        en: "üìå When NOT to use LogRocket?"
      },
      content: {
        es: [
          "‚ùå Si tu proyecto es peque√±o y no requiere grabaci√≥n de sesiones o an√°lisis avanzado.",
          "‚ùå Si prefieres usar herramientas de logging simples en lugar de una plataforma completa.",
          "‚ùå Si el uso de LogRocket introduce complejidad innecesaria en proyectos sin entornos de producci√≥n cr√≠ticos."
        ],
        en: [
          "‚ùå If your project is small and does not require session recording or advanced analysis.",
          "‚ùå If you prefer using simple logging tools instead of a full-fledged platform.",
          "‚ùå If using LogRocket introduces unnecessary complexity in projects without critical production environments."
        ]
      }
    }
  ],
  conclusion: {
    es: [
      "‚úÖ LogRocket es ideal para grabar sesiones de usuario, capturar errores y analizar el rendimiento en aplicaciones React.",
      "‚úÖ Facilita la depuraci√≥n y mejora la experiencia del usuario al proporcionar contexto detallado.",
      "‚úÖ No debe usarse en exceso si el proyecto no requiere monitoreo avanzado o grabaci√≥n de sesiones."
    ],
    en: [
      "‚úÖ LogRocket is ideal for recording user sessions, capturing errors, and analyzing performance in React applications.",
      "‚úÖ It facilitates debugging and improves the user experience by providing detailed context.",
      "‚úÖ It should not be overused if the project does not require advanced monitoring or session recording."
    ]
  }
};

export default concept;