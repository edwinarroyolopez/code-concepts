import { Concept } from "@/types/concept";

const concept: Concept = {
    title: {
        es: "SEO en React",
        en: "SEO in React"
    },
    slug: "seo-react",
    description: {
        es: "El SEO en React implica optimizar una aplicaci√≥n para mejorar su visibilidad en los motores de b√∫squeda. Esto incluye t√©cnicas como renderizado en el servidor (SSR), uso de metadatos din√°micos y herramientas como React Helmet o Next.js para gestionar etiquetas HTML cr√≠ticas.",
        en: "SEO in React involves optimizing an application to improve its visibility in search engines. This includes techniques like server-side rendering (SSR), dynamic metadata management, and tools like React Helmet or Next.js to handle critical HTML tags."
    },
    sections: [
        {
            type: "text",
            title: {
                es: "üîπ¬øQu√© es SEO en React?",
                en: "üîπWhat is SEO in React?"
            },
            code: `<Helmet><title>Optimizaci√≥n SEO</title></Helmet>`,
            content: {
                es: "El SEO en React se refiere a las pr√°cticas y herramientas utilizadas para asegurar que una aplicaci√≥n React sea indexada correctamente por los motores de b√∫squeda. Dado que React genera contenido din√°micamente en el cliente, es necesario implementar t√©cnicas como SSR o SSG para garantizar que los motores de b√∫squeda puedan leer el contenido.",
                en: "SEO in React refers to the practices and tools used to ensure that a React application is properly indexed by search engines. Since React generates content dynamically on the client side, it is necessary to implement techniques like SSR or SSG to ensure that search engines can read the content."
            }
        },
        {
            type: "list",
            title: {
                es: "üîπ¬øCu√°ndo usar SEO en React?",
                en: "üîπWhen to use SEO in React?"
            },
            content: {
                es: [
                    "Cuando necesitas mejorar la visibilidad de tu aplicaci√≥n en los motores de b√∫squeda.",
                    "Cuando trabajas en proyectos como blogs, tiendas en l√≠nea o sitios de documentaci√≥n que dependen del tr√°fico org√°nico.",
                    "Cuando deseas implementar t√©cnicas como SSR o SSG para optimizar el rendimiento y el SEO."
                ],
                en: [
                    "When you need to improve your application's visibility in search engines.",
                    "When working on projects like blogs, e-commerce sites, or documentation sites that rely on organic traffic.",
                    "When you want to implement techniques like SSR or SSG to optimize performance and SEO."
                ]
            }
        },
        {
            type: "table",
            title: {
                es: "üîπComparaci√≥n entre CSR y SSR/SSG para SEO",
                en: "üîπComparison between CSR and SSR/SSG for SEO"
            },
            headers: {
                es: ["Caracter√≠stica", "CSR (Cliente)", "SSR/SSG (Servidor)"],
                en: ["Feature", "CSR (Client)", "SSR/SSG (Server)"]
            },
            rows: [
                {
                    es: ["Indexaci√≥n", "‚ùå Limitada (contenido din√°mico)", "‚úÖ Completa (HTML pre-renderizado)"],
                    en: ["Indexing", "‚ùå Limited (dynamic content)", "‚úÖ Complete (pre-rendered HTML)"]
                },
                {
                    es: ["Rendimiento", "‚ùå Menor (carga inicial pesada)", "‚úÖ Mejor (HTML ligero)"],
                    en: ["Performance", "‚ùå Lower (heavy initial load)", "‚úÖ Better (lightweight HTML)"]
                },
                {
                    es: ["SEO", "‚ùå Bajo (depende de JavaScript)", "‚úÖ Alto (contenido accesible)"],
                    en: ["SEO", "‚ùå Low (depends on JavaScript)", "‚úÖ High (accessible content)"]
                }
            ]
        },
        {
            type: "example",
            title: {
                es: "1Ô∏è‚É£ Ejemplo pr√°ctico de SEO en React",
                en: "1Ô∏è‚É£ Practical example of SEO in React"
            },
            caseTitle: {
                es: "Uso de React Helmet para gestionar metadatos",
                en: "Using React Helmet to manage metadata"
            },
            caseDescription: {
                es: "Este ejemplo muestra c√≥mo usar React Helmet para agregar etiquetas meta din√°micas que mejoren el SEO.",
                en: "This example demonstrates how to use React Helmet to add dynamic meta tags that improve SEO."
            },
            code: `import React from 'react';
import { Helmet } from 'react-helmet';

function App() {
  return (
    <div>
      <Helmet>
        <title>Optimizaci√≥n SEO con React Helmet</title>
        <meta name="description" content="Ejemplo de optimizaci√≥n SEO usando React Helmet." />
        <meta name="keywords" content="React, SEO, Helmet" />
      </Helmet>
      <h1>Bienvenido a mi aplicaci√≥n</h1>
      <p>Este es un ejemplo de SEO en React.</p>
    </div>
  );
}

export default App;`,
            conclusion: {
                es: "üî• Beneficio: React Helmet permite gestionar din√°micamente etiquetas meta, mejorando la indexaci√≥n y el SEO de la aplicaci√≥n.",
                en: "üî• Benefit: React Helmet allows dynamically managing meta tags, improving indexing and SEO of the application."
            }
        },
        {
            type: "example",
            title: {
                es: "2Ô∏è‚É£ Ejemplo pr√°ctico de SEO en React",
                en: "2Ô∏è‚É£ Practical example of SEO in React"
            },
            caseTitle: {
                es: "Implementaci√≥n de SSR con Next.js",
                en: "Implementing SSR with Next.js"
            },
            caseDescription: {
                es: "Este ejemplo muestra c√≥mo usar Next.js para implementar SSR y mejorar el SEO.",
                en: "This example demonstrates how to use Next.js to implement SSR and improve SEO."
            },
            code: `// pages/index.js
export async function getServerSideProps() {
  const data = await fetch('https://api.example.com/data').then((res) => res.json());

  return {
    props: {
      data,
    },
  };
}

export default function Home({ data }) {
  return (
    <div>
      <h1>Contenido din√°mico con SSR</h1>
      <ul>
        {data.map((item) => (
          <li key={item.id}>{item.title}</li>
        ))}
      </ul>
    </div>
  );
}`,
            conclusion: {
                es: "üî• Beneficio: SSR en Next.js genera HTML pre-renderizado, lo que mejora la indexaci√≥n y el SEO.",
                en: "üî• Benefit: SSR in Next.js generates pre-rendered HTML, improving indexing and SEO."
            }
        },
        {
            type: "example",
            title: {
                es: "3Ô∏è‚É£ Ejemplo pr√°ctico de SEO en React",
                en: "3Ô∏è‚É£ Practical example of SEO in React"
            },
            caseTitle: {
                es: "Generaci√≥n est√°tica con SSG en Next.js",
                en: "Static generation with SSG in Next.js"
            },
            caseDescription: {
                es: "Este ejemplo muestra c√≥mo usar SSG en Next.js para generar p√°ginas est√°ticas optimizadas para SEO.",
                en: "This example demonstrates how to use SSG in Next.js to generate static pages optimized for SEO."
            },
            code: `// pages/posts/[id].js
export async function getStaticPaths() {
  const posts = await fetch('https://api.example.com/posts').then((res) => res.json());

  const paths = posts.map((post) => ({
    params: { id: post.id.toString() },
  }));

  return { paths, fallback: false };
}

export async function getStaticProps({ params }) {
  const post = await fetch("https://api.example.com/posts/${"params.id"}").then((res) => res.json());

  return {
    props: {
      post,
    },
  };
}

export default function Post({ post }) {
  return (
    <div>
      <h1>{post.title}</h1>
      <p>{post.content}</p>
    </div>
  );
}`,
            conclusion: {
                es: "üî• Beneficio: SSG en Next.js genera p√°ginas est√°ticas optimizadas para SEO, mejorando el rendimiento y la indexaci√≥n.",
                en: "üî• Benefit: SSG in Next.js generates static pages optimized for SEO, improving performance and indexing."
            }
        },
        {
            type: "list",
            title: {
                es: "üìå ¬øCu√°ndo NO usar SEO en React?",
                en: "üìå When NOT to use SEO in React?"
            },
            content: {
                es: [
                    "‚ùå Si tu aplicaci√≥n es una herramienta interna o no necesita tr√°fico org√°nico.",
                    "‚ùå Si prefieres priorizar la interactividad completa sobre la optimizaci√≥n para motores de b√∫squeda.",
                    "‚ùå Si el uso de t√©cnicas como SSR o SSG introduce complejidad innecesaria en proyectos peque√±os."
                ],
                en: [
                    "‚ùå If your application is an internal tool or does not require organic traffic.",
                    "‚ùå If you prefer prioritizing full interactivity over optimization for search engines.",
                    "‚ùå If using techniques like SSR or SSG introduces unnecessary complexity in small projects."
                ]
            }
        }
    ],
    conclusion: {
        es: [
            "‚úÖ El SEO en React es ideal para proyectos que dependen del tr√°fico org√°nico, como blogs o tiendas en l√≠nea.",
            "‚úÖ Facilita la indexaci√≥n y mejora el rendimiento mediante t√©cnicas como SSR y SSG.",
            "‚úÖ No debe usarse en exceso si el proyecto no requiere visibilidad en motores de b√∫squeda."
        ],
        en: [
            "‚úÖ SEO in React is ideal for projects that rely on organic traffic, such as blogs or e-commerce sites.",
            "‚úÖ It facilitates indexing and improves performance through techniques like SSR and SSG.",
            "‚úÖ It should not be overused if the project does not require visibility in search engines."
        ]
    }
};

export default concept;